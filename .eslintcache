[{"D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\TodolistsList.tsx":"1","D:\\Work\\React\\todolist-15\\src\\components\\EditableSpan\\EditableSpan.tsx":"2","D:\\Work\\React\\todolist-15\\src\\app\\store.ts":"3","D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\tasks-reducer.ts":"4","D:\\Work\\React\\todolist-15\\src\\index.tsx":"5","D:\\Work\\React\\todolist-15\\src\\reportWebVitals.ts":"6","D:\\Work\\React\\todolist-15\\src\\app\\App.tsx":"7","D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\todolists-reducer.ts":"8","D:\\Work\\React\\todolist-15\\src\\api\\todolists-api.ts":"9","D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"10","D:\\Work\\React\\todolist-15\\src\\components\\AddItemForm\\AddItemForm.tsx":"11","D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"12","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\index.tsx":"13","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\reportWebVitals.ts":"14","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\app\\store.ts":"15","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\app\\App.tsx":"16","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\tasks-reducer.ts":"17","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\todolists-reducer.ts":"18","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\TodolistsList.tsx":"19","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\api\\todolists-api.ts":"20","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"21","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\components\\AddItemForm\\AddItemForm.tsx":"22","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\components\\EditableSpan\\EditableSpan.tsx":"23","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"24","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\app\\app-reducer.ts":"25","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\components\\errorSnackbar\\ErrorSnackbar.tsx":"26","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\utils\\error.ts":"27","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\index.tsx":"28","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\reportWebVitals.ts":"29","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\app\\store.ts":"30","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\app\\App.tsx":"31","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\app\\app-reducer.ts":"32","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\tasks-reducer.ts":"33","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\todolists-reducer.ts":"34","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\TodolistsList.tsx":"35","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\components\\errorSnackbar\\ErrorSnackbar.tsx":"36","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\api\\todolists-api.ts":"37","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\utils\\error.ts":"38","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\components\\AddItemForm\\AddItemForm.tsx":"39","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"40","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"41","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"42","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\Login\\auth-reducer.ts":"43","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\Login\\Login.tsx":"44"},{"size":3733,"mtime":1596295712000,"results":"45","hashOfConfig":"46"},{"size":952,"mtime":1594154724000,"results":"47","hashOfConfig":"46"},{"size":1033,"mtime":1596295538000,"results":"48","hashOfConfig":"46"},{"size":4593,"mtime":1611301462000,"results":"49","hashOfConfig":"46"},{"size":643,"mtime":1611301434000,"results":"50","hashOfConfig":"46"},{"size":425,"mtime":1607869388000,"results":"51","hashOfConfig":"46"},{"size":898,"mtime":1596295712000,"results":"52","hashOfConfig":"46"},{"size":3210,"mtime":1611301808831,"results":"53","hashOfConfig":"46"},{"size":2582,"mtime":1611301808841,"results":"54","hashOfConfig":"46"},{"size":3838,"mtime":1596295540000,"results":"55","hashOfConfig":"46"},{"size":1474,"mtime":1594727720000,"results":"56","hashOfConfig":"46"},{"size":1773,"mtime":1596295538000,"results":"57","hashOfConfig":"46"},{"size":643,"mtime":1611301434000,"results":"58","hashOfConfig":"59"},{"size":425,"mtime":1607869388000,"results":"60","hashOfConfig":"59"},{"size":1098,"mtime":1620919780292,"results":"61","hashOfConfig":"59"},{"size":1325,"mtime":1620923760279,"results":"62","hashOfConfig":"59"},{"size":6805,"mtime":1621005857563,"results":"63","hashOfConfig":"59"},{"size":5911,"mtime":1621002362071,"results":"64","hashOfConfig":"59"},{"size":3797,"mtime":1620930507039,"results":"65","hashOfConfig":"59"},{"size":2674,"mtime":1621004574790,"results":"66","hashOfConfig":"59"},{"size":4193,"mtime":1621001773044,"results":"67","hashOfConfig":"59"},{"size":1678,"mtime":1620931146612,"results":"68","hashOfConfig":"59"},{"size":1041,"mtime":1621003320061,"results":"69","hashOfConfig":"59"},{"size":2019,"mtime":1621003615194,"results":"70","hashOfConfig":"59"},{"size":1047,"mtime":1620927223091,"results":"71","hashOfConfig":"59"},{"size":1118,"mtime":1620927466604,"results":"72","hashOfConfig":"59"},{"size":828,"mtime":1620973015935,"results":"73","hashOfConfig":"59"},{"size":752,"mtime":1621598483668,"results":"74","hashOfConfig":"75"},{"size":425,"mtime":1607869388000,"results":"76","hashOfConfig":"75"},{"size":1183,"mtime":1621598265860,"results":"77","hashOfConfig":"75"},{"size":2530,"mtime":1621600291168,"results":"78","hashOfConfig":"75"},{"size":2158,"mtime":1621598265778,"results":"79","hashOfConfig":"75"},{"size":6881,"mtime":1621599282657,"results":"80","hashOfConfig":"75"},{"size":5911,"mtime":1621598483708,"results":"81","hashOfConfig":"75"},{"size":4070,"mtime":1621598689609,"results":"82","hashOfConfig":"75"},{"size":1118,"mtime":1620927466604,"results":"83","hashOfConfig":"75"},{"size":3182,"mtime":1621599594427,"results":"84","hashOfConfig":"75"},{"size":828,"mtime":1621598265732,"results":"85","hashOfConfig":"75"},{"size":1678,"mtime":1620931146612,"results":"86","hashOfConfig":"75"},{"size":4189,"mtime":1621075361835,"results":"87","hashOfConfig":"75"},{"size":2019,"mtime":1621003615194,"results":"88","hashOfConfig":"75"},{"size":1041,"mtime":1621003320061,"results":"89","hashOfConfig":"75"},{"size":1975,"mtime":1621598265678,"results":"90","hashOfConfig":"75"},{"size":3760,"mtime":1621535810956,"results":"91","hashOfConfig":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1cgma8q",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"717b80",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"gx8tar",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"156"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"156"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"156"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"156"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\TodolistsList.tsx",["192","193","194","195","196","197","198","199"],"D:\\Work\\React\\todolist-15\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\Work\\React\\todolist-15\\src\\app\\store.ts",[],"D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"D:\\Work\\React\\todolist-15\\src\\index.tsx",[],"D:\\Work\\React\\todolist-15\\src\\reportWebVitals.ts",[],"D:\\Work\\React\\todolist-15\\src\\app\\App.tsx",[],"D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"D:\\Work\\React\\todolist-15\\src\\api\\todolists-api.ts",[],"D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["200","201","202","203","204","205"],"D:\\Work\\React\\todolist-15\\src\\components\\AddItemForm\\AddItemForm.tsx",["206","207","208"],"D:\\Work\\React\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["209","210","211"],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\index.tsx",[],["212","213"],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\reportWebVitals.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\app\\store.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\app\\App.tsx",[],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\tasks-reducer.ts",["214"],"import {\r\n    AddTodolistActionType, ChangeEntityStatusType,\r\n    changeTodolistEntityStatusAC,\r\n    RemoveTodolistActionType,\r\n    SetTodolistsActionType\r\n} from './todolists-reducer'\r\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    RequestStatusType,\r\n    setAppErrorAC,\r\n    setAppErrorActionType,\r\n    setAppStatusAC,\r\n    setAppStatusActionType\r\n} from \"../../app/app-reducer\";\r\nimport {AxiosError} from \"axios\";\r\nimport {handleServerAppError, handleServerNetworkError} from \"../../utils/error\";\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id !== action.taskId)}\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\r\n            }\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST':\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        case 'SET-TODOLISTS': {\r\n            const copyState = {...state}\r\n            action.todolists.forEach(tl => {\r\n                copyState[tl.id] = []\r\n            })\r\n            return copyState\r\n        }\r\n        case 'SET-TASKS':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n\r\n       /* case 'CHANGE-TASK-ENTITY-STATUS':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: action.taskId\r\n            */\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\r\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\r\nexport const addTaskAC = (task: TaskType) =>\r\n    ({type: 'ADD-TASK', task} as const)\r\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\r\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\r\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\r\n\r\nexport const changeTaskEntityStatusAC = (todolistId: string, taskId: string, entityStatus: RequestStatusType) => ({\r\n    type: 'CHANGE-TASK-ENTITY-STATUS',\r\n    todolistId,\r\n    taskId,\r\n    entityStatus\r\n} as const)\r\n\r\n// thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTasks(todolistId)\r\n        .then((res) => {\r\n            dispatch(setTasksAC(res.data.items, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'));\r\n    dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'));\r\n    todolistsAPI.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(removeTaskAC(taskId, todolistId))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch)\r\n            }\r\n        })\r\n        .catch((err: AxiosError) => {\r\n            handleServerNetworkError(err, dispatch)\r\n        })\r\n        .finally(() => {\r\n            dispatch(changeTodolistEntityStatusAC(todolistId, 'idle'));\r\n        })\r\n}\r\n\r\nexport const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTask(todolistId, title)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(addTaskAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch)\r\n            }\r\n        })\r\n        .catch((err: AxiosError) => {\r\n            handleServerNetworkError(err, dispatch)\r\n        })\r\n}\r\nexport const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\r\n    (dispatch: Dispatch<ActionsType>, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            //throw new Error(\"task not found in the state\");\r\n            console.warn('task not found in the state')\r\n            return\r\n        }\r\n        const apiModel: UpdateTaskModelType = {\r\n            deadline: task.deadline,\r\n            description: task.description,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            title: task.title,\r\n            status: task.status,\r\n            ...domainModel\r\n        }\r\n        dispatch(setAppStatusAC('loading'));\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'));\r\n        todolistsAPI.updateTask(todolistId, taskId, apiModel)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(updateTaskAC(taskId, domainModel, todolistId))\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                }\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(err, dispatch)\r\n            })\r\n            .finally(() => {\r\n                dispatch(changeTodolistEntityStatusAC(todolistId, 'idle'));\r\n            })\r\n    }\r\n\r\n// types\r\nexport type UpdateDomainTaskModelType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof changeTaskEntityStatusAC>\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof setTasksAC>\r\n    | setAppStatusActionType\r\n    | setAppErrorActionType\r\n    | ChangeEntityStatusType\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\todolists-reducer.ts",["215"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {\r\n    RequestStatusType,\r\n    setAppErrorAC,\r\n    setAppErrorActionType,\r\n    setAppStatusAC,\r\n    setAppStatusActionType\r\n} from \"../../app/app-reducer\";\r\nimport {AxiosError} from \"axios\";\r\nimport {handleServerAppError, handleServerNetworkError} from \"../../utils/error\";\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id !== action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.entityStatus} : tl)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\n\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\nexport const changeTodolistEntityStatusAC = (id: string, entityStatus: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS',\r\n    id,\r\n    entityStatus\r\n} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'));\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(removeTodolistAC(todolistId));\r\n                    dispatch(setAppStatusAC('succeeded'));\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                }\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(err, dispatch)\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(addTodolistAC(res.data.data.item))\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                    // if (res.data.messages.length) {\r\n                    //     dispatch(setAppErrorAC(res.data.messages[0]))\r\n                    // } else {\r\n                    //     dispatch(setAppErrorAC('Some error occurred'))\r\n                    // }\r\n                    // dispatch(setAppStatusAC('failed'))\r\n                }\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(err, dispatch)\r\n\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'));\r\n        dispatch(changeTodolistEntityStatusAC(id, 'loading'))\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0 ) {\r\n                    dispatch(changeTodolistTitleAC(id, title));\r\n                    dispatch(setAppStatusAC('succeeded'));\r\n                }  else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                }\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(err, dispatch)\r\n            })\r\n            .finally(() => {\r\n                dispatch(changeTodolistEntityStatusAC(id, 'idle'))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\nexport type ChangeEntityStatusType = ReturnType<typeof changeTodolistEntityStatusAC>\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | setAppStatusActionType\r\n    | setAppErrorActionType\r\n    | ChangeEntityStatusType\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\TodolistsList.tsx",["216","217","218","219","220","221","222","223"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\n\r\nexport const TodolistsList: React.FC = () => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                id={tl.id}\r\n                                title={tl.title}\r\n                                filter={tl.filter}\r\n                                entityStatus={tl.entityStatus}\r\n                                addTask={addTask}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\api\\todolists-api.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["224","225","226","227","228","229"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title}\r\n                          onChange={changeTodolistTitle}\r\n                          disabled={props.entityStatus === 'loading'}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} entityStatus={props.entityStatus}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                                                entityStatus={props.entityStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\components\\AddItemForm\\AddItemForm.tsx",["230","231","232"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    entityStatus?: RequestStatusType\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n                   disabled={props.entityStatus === 'loading'}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem} disabled={props.entityStatus === 'loading'}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\components\\EditableSpan\\EditableSpan.tsx",["233"],"import React, {ChangeEvent, useState} from 'react';\r\nimport {TextField} from '@material-ui/core';\r\nimport {RequestStatusType} from \"../../app/app-reducer\";\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n    disabled: boolean\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        if(!props.disabled){\r\n            setEditMode(true);\r\n            setTitle(props.value);\r\n        }\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ?  <TextField value={title} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode} >{props.value}</span>\r\n});\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["234","235","236"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\nimport {RequestStatusType} from \"../../../../app/app-reducer\";\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    entityStatus: RequestStatusType\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n            disabled={props.entityStatus === 'loading'}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler} disabled={props.entityStatus === 'loading'}/>\r\n        <IconButton onClick={onClickHandler} disabled={props.entityStatus === 'loading'}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\app\\app-reducer.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\components\\errorSnackbar\\ErrorSnackbar.tsx",[],"C:\\Users\\admin\\WorkSpace\\Study\\TO_DO-list\\todolist-15\\src\\utils\\error.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\index.tsx",[],["237","238"],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\reportWebVitals.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\app\\store.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\app\\App.tsx",["239"],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\app\\app-reducer.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\todolists-reducer.ts",["240"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {\r\n    RequestStatusType,\r\n    setAppErrorAC,\r\n    SetAppErrorActionType,\r\n    setAppStatusAC,\r\n    SetAppStatusActionType\r\n} from \"../../app/app-reducer\";\r\nimport {AxiosError} from \"axios\";\r\nimport {handleServerAppError, handleServerNetworkError} from \"../../utils/error\";\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id !== action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.entityStatus} : tl)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\n\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\nexport const changeTodolistEntityStatusAC = (id: string, entityStatus: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS',\r\n    id,\r\n    entityStatus\r\n} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'));\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(removeTodolistAC(todolistId));\r\n                    dispatch(setAppStatusAC('succeeded'));\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                }\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(err, dispatch)\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(addTodolistAC(res.data.data.item))\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                    // if (res.data.messages.length) {\r\n                    //     dispatch(setAppErrorAC(res.data.messages[0]))\r\n                    // } else {\r\n                    //     dispatch(setAppErrorAC('Some error occurred'))\r\n                    // }\r\n                    // dispatch(setAppStatusAC('failed'))\r\n                }\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(err, dispatch)\r\n\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'));\r\n        dispatch(changeTodolistEntityStatusAC(id, 'loading'))\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0 ) {\r\n                    dispatch(changeTodolistTitleAC(id, title));\r\n                    dispatch(setAppStatusAC('succeeded'));\r\n                }  else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                }\r\n            })\r\n            .catch((err: AxiosError) => {\r\n                handleServerNetworkError(err, dispatch)\r\n            })\r\n            .finally(() => {\r\n                dispatch(changeTodolistEntityStatusAC(id, 'idle'))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\nexport type ChangeEntityStatusType = ReturnType<typeof changeTodolistEntityStatusAC>\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | SetAppStatusActionType\r\n    | SetAppErrorActionType\r\n    | ChangeEntityStatusType\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\TodolistsList.tsx",["241","242","243","244","245","246","247","248"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const TodolistsList: React.FC = () => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks);\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if(!isLoggedIn){\r\n        return  <Redirect to={'/login'}/>\r\n    }\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                id={tl.id}\r\n                                title={tl.title}\r\n                                filter={tl.filter}\r\n                                entityStatus={tl.entityStatus}\r\n                                addTask={addTask}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\components\\errorSnackbar\\ErrorSnackbar.tsx",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\api\\todolists-api.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\utils\\error.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\components\\AddItemForm\\AddItemForm.tsx",["249","250","251"],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["252","253","254","255","256","257"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title}\r\n                          onChange={changeTodolistTitle}\r\n                          disabled={props.entityStatus === 'loading'}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} entityStatus={props.entityStatus}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                                                entityStatus={t.entityStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["258","259","260"],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",["261"],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\Login\\auth-reducer.ts",[],"C:\\Users\\admin\\WorkSpace\\Study\\TDL\\New todolist\\src\\features\\Login\\Login.tsx",["262"],{"ruleId":"263","severity":1,"message":"264","line":27,"column":8,"nodeType":"265","endLine":27,"endColumn":10,"suggestions":"266"},{"ruleId":"263","severity":1,"message":"267","line":32,"column":8,"nodeType":"265","endLine":32,"endColumn":10,"suggestions":"268"},{"ruleId":"263","severity":1,"message":"267","line":37,"column":8,"nodeType":"265","endLine":37,"endColumn":10,"suggestions":"269"},{"ruleId":"263","severity":1,"message":"267","line":42,"column":8,"nodeType":"265","endLine":42,"endColumn":10,"suggestions":"270"},{"ruleId":"263","severity":1,"message":"267","line":47,"column":8,"nodeType":"265","endLine":47,"endColumn":10,"suggestions":"271"},{"ruleId":"263","severity":1,"message":"267","line":52,"column":8,"nodeType":"265","endLine":52,"endColumn":10,"suggestions":"272"},{"ruleId":"263","severity":1,"message":"267","line":57,"column":8,"nodeType":"265","endLine":57,"endColumn":10,"suggestions":"273"},{"ruleId":"263","severity":1,"message":"267","line":62,"column":8,"nodeType":"265","endLine":62,"endColumn":10,"suggestions":"274"},{"ruleId":"263","severity":1,"message":"275","line":34,"column":8,"nodeType":"265","endLine":34,"endColumn":10,"suggestions":"276"},{"ruleId":"263","severity":1,"message":"277","line":38,"column":8,"nodeType":"265","endLine":38,"endColumn":33,"suggestions":"278"},{"ruleId":"263","severity":1,"message":"277","line":45,"column":8,"nodeType":"265","endLine":45,"endColumn":45,"suggestions":"279"},{"ruleId":"263","severity":1,"message":"277","line":47,"column":86,"nodeType":"265","endLine":47,"endColumn":116,"suggestions":"280"},{"ruleId":"263","severity":1,"message":"277","line":48,"column":92,"nodeType":"265","endLine":48,"endColumn":122,"suggestions":"281"},{"ruleId":"263","severity":1,"message":"277","line":49,"column":98,"nodeType":"265","endLine":49,"endColumn":128,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":2,"column":9,"nodeType":"285","messageId":"286","endLine":2,"endColumn":12},{"ruleId":"283","severity":1,"message":"287","line":2,"column":14,"nodeType":"285","messageId":"286","endLine":2,"endColumn":20},{"ruleId":"283","severity":1,"message":"288","line":2,"column":22,"nodeType":"285","messageId":"286","endLine":2,"endColumn":33},{"ruleId":"263","severity":1,"message":"277","line":15,"column":97,"nodeType":"265","endLine":15,"endColumn":130,"suggestions":"289"},{"ruleId":"263","severity":1,"message":"277","line":20,"column":8,"nodeType":"265","endLine":20,"endColumn":41,"suggestions":"290"},{"ruleId":"263","severity":1,"message":"277","line":24,"column":8,"nodeType":"265","endLine":24,"endColumn":41,"suggestions":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"283","severity":1,"message":"296","line":12,"column":5,"nodeType":"285","messageId":"286","endLine":12,"endColumn":18},{"ruleId":"283","severity":1,"message":"296","line":5,"column":5,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":27,"column":8,"nodeType":"265","endLine":27,"endColumn":10,"suggestions":"297"},{"ruleId":"263","severity":1,"message":"267","line":32,"column":8,"nodeType":"265","endLine":32,"endColumn":10,"suggestions":"298"},{"ruleId":"263","severity":1,"message":"267","line":37,"column":8,"nodeType":"265","endLine":37,"endColumn":10,"suggestions":"299"},{"ruleId":"263","severity":1,"message":"267","line":42,"column":8,"nodeType":"265","endLine":42,"endColumn":10,"suggestions":"300"},{"ruleId":"263","severity":1,"message":"267","line":47,"column":8,"nodeType":"265","endLine":47,"endColumn":10,"suggestions":"301"},{"ruleId":"263","severity":1,"message":"267","line":52,"column":8,"nodeType":"265","endLine":52,"endColumn":10,"suggestions":"302"},{"ruleId":"263","severity":1,"message":"267","line":57,"column":8,"nodeType":"265","endLine":57,"endColumn":10,"suggestions":"303"},{"ruleId":"263","severity":1,"message":"267","line":62,"column":8,"nodeType":"265","endLine":62,"endColumn":10,"suggestions":"304"},{"ruleId":"263","severity":1,"message":"275","line":35,"column":8,"nodeType":"265","endLine":35,"endColumn":10,"suggestions":"305"},{"ruleId":"263","severity":1,"message":"277","line":39,"column":8,"nodeType":"265","endLine":39,"endColumn":33,"suggestions":"306"},{"ruleId":"263","severity":1,"message":"277","line":46,"column":8,"nodeType":"265","endLine":46,"endColumn":45,"suggestions":"307"},{"ruleId":"263","severity":1,"message":"277","line":48,"column":86,"nodeType":"265","endLine":48,"endColumn":116,"suggestions":"308"},{"ruleId":"263","severity":1,"message":"277","line":49,"column":92,"nodeType":"265","endLine":49,"endColumn":122,"suggestions":"309"},{"ruleId":"263","severity":1,"message":"277","line":50,"column":98,"nodeType":"265","endLine":50,"endColumn":128,"suggestions":"310"},{"ruleId":"283","severity":1,"message":"284","line":2,"column":9,"nodeType":"285","messageId":"286","endLine":2,"endColumn":12},{"ruleId":"283","severity":1,"message":"287","line":2,"column":14,"nodeType":"285","messageId":"286","endLine":2,"endColumn":20},{"ruleId":"283","severity":1,"message":"288","line":2,"column":22,"nodeType":"285","messageId":"286","endLine":2,"endColumn":33},{"ruleId":"283","severity":1,"message":"311","line":3,"column":9,"nodeType":"285","messageId":"286","endLine":3,"endColumn":26},{"ruleId":"263","severity":1,"message":"277","line":17,"column":97,"nodeType":"265","endLine":17,"endColumn":130,"suggestions":"312"},{"ruleId":"263","severity":1,"message":"277","line":22,"column":8,"nodeType":"265","endLine":22,"endColumn":41,"suggestions":"313"},{"ruleId":"263","severity":1,"message":"277","line":26,"column":8,"nodeType":"265","endLine":26,"endColumn":41,"suggestions":"314"},{"ruleId":"292","replacedBy":"315"},{"ruleId":"294","replacedBy":"316"},{"ruleId":"263","severity":1,"message":"264","line":33,"column":8,"nodeType":"265","endLine":33,"endColumn":10,"suggestions":"317"},{"ruleId":"283","severity":1,"message":"296","line":5,"column":5,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"263","severity":1,"message":"318","line":32,"column":8,"nodeType":"265","endLine":32,"endColumn":10,"suggestions":"319"},{"ruleId":"263","severity":1,"message":"267","line":37,"column":8,"nodeType":"265","endLine":37,"endColumn":10,"suggestions":"320"},{"ruleId":"263","severity":1,"message":"267","line":42,"column":8,"nodeType":"265","endLine":42,"endColumn":10,"suggestions":"321"},{"ruleId":"263","severity":1,"message":"267","line":47,"column":8,"nodeType":"265","endLine":47,"endColumn":10,"suggestions":"322"},{"ruleId":"263","severity":1,"message":"267","line":52,"column":8,"nodeType":"265","endLine":52,"endColumn":10,"suggestions":"323"},{"ruleId":"263","severity":1,"message":"267","line":57,"column":8,"nodeType":"265","endLine":57,"endColumn":10,"suggestions":"324"},{"ruleId":"263","severity":1,"message":"267","line":62,"column":8,"nodeType":"265","endLine":62,"endColumn":10,"suggestions":"325"},{"ruleId":"263","severity":1,"message":"267","line":67,"column":8,"nodeType":"265","endLine":67,"endColumn":10,"suggestions":"326"},{"ruleId":"283","severity":1,"message":"284","line":2,"column":9,"nodeType":"285","messageId":"286","endLine":2,"endColumn":12},{"ruleId":"283","severity":1,"message":"287","line":2,"column":14,"nodeType":"285","messageId":"286","endLine":2,"endColumn":20},{"ruleId":"283","severity":1,"message":"288","line":2,"column":22,"nodeType":"285","messageId":"286","endLine":2,"endColumn":33},{"ruleId":"263","severity":1,"message":"275","line":35,"column":8,"nodeType":"265","endLine":35,"endColumn":10,"suggestions":"327"},{"ruleId":"263","severity":1,"message":"277","line":39,"column":8,"nodeType":"265","endLine":39,"endColumn":33,"suggestions":"328"},{"ruleId":"263","severity":1,"message":"277","line":46,"column":8,"nodeType":"265","endLine":46,"endColumn":45,"suggestions":"329"},{"ruleId":"263","severity":1,"message":"277","line":48,"column":86,"nodeType":"265","endLine":48,"endColumn":116,"suggestions":"330"},{"ruleId":"263","severity":1,"message":"277","line":49,"column":92,"nodeType":"265","endLine":49,"endColumn":122,"suggestions":"331"},{"ruleId":"263","severity":1,"message":"277","line":50,"column":98,"nodeType":"265","endLine":50,"endColumn":128,"suggestions":"332"},{"ruleId":"263","severity":1,"message":"277","line":17,"column":97,"nodeType":"265","endLine":17,"endColumn":130,"suggestions":"333"},{"ruleId":"263","severity":1,"message":"277","line":22,"column":8,"nodeType":"265","endLine":22,"endColumn":41,"suggestions":"334"},{"ruleId":"263","severity":1,"message":"277","line":26,"column":8,"nodeType":"265","endLine":26,"endColumn":41,"suggestions":"335"},{"ruleId":"283","severity":1,"message":"311","line":3,"column":9,"nodeType":"285","messageId":"286","endLine":3,"endColumn":26},{"ruleId":"336","severity":1,"message":"337","line":61,"column":25,"nodeType":"338","messageId":"339","endLine":62,"endColumn":46,"fix":"340"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["341"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["342"],["343"],["344"],["345"],["346"],["347"],["348"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["349"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["350"],["351"],["352"],["353"],["354"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["355"],["356"],["357"],"no-native-reassign",["358"],"no-negated-in-lhs",["359"],"'setAppErrorAC' is defined but never used.",["360"],["361"],["362"],["363"],["364"],["365"],["366"],["367"],["368"],["369"],["370"],["371"],["372"],["373"],"'RequestStatusType' is defined but never used.",["374"],["375"],["376"],["358"],["359"],["377"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isLoggedIn'. Either include them or remove the dependency array.",["378"],["379"],["380"],["381"],["382"],["383"],["384"],["385"],["386"],["387"],["388"],["389"],["390"],["391"],["392"],["393"],["394"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"395","text":"396"},{"desc":"397","fix":"398"},{"desc":"397","fix":"399"},{"desc":"397","fix":"400"},{"desc":"397","fix":"401"},{"desc":"397","fix":"402"},{"desc":"397","fix":"403"},{"desc":"397","fix":"404"},{"desc":"397","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"408","fix":"410"},{"desc":"408","fix":"411"},{"desc":"408","fix":"412"},{"desc":"408","fix":"413"},{"desc":"408","fix":"414"},{"desc":"408","fix":"415"},{"desc":"408","fix":"416"},"no-global-assign","no-unsafe-negation",{"desc":"397","fix":"417"},{"desc":"397","fix":"418"},{"desc":"397","fix":"419"},{"desc":"397","fix":"420"},{"desc":"397","fix":"421"},{"desc":"397","fix":"422"},{"desc":"397","fix":"423"},{"desc":"397","fix":"424"},{"desc":"406","fix":"425"},{"desc":"408","fix":"426"},{"desc":"408","fix":"427"},{"desc":"408","fix":"428"},{"desc":"408","fix":"429"},{"desc":"408","fix":"430"},{"desc":"408","fix":"431"},{"desc":"408","fix":"432"},{"desc":"408","fix":"433"},{"desc":"397","fix":"434"},{"desc":"435","fix":"436"},{"desc":"397","fix":"437"},{"desc":"397","fix":"438"},{"desc":"397","fix":"439"},{"desc":"397","fix":"440"},{"desc":"397","fix":"441"},{"desc":"397","fix":"442"},{"desc":"397","fix":"443"},{"desc":"406","fix":"444"},{"desc":"408","fix":"445"},{"desc":"408","fix":"446"},{"desc":"408","fix":"447"},{"desc":"408","fix":"448"},{"desc":"408","fix":"449"},{"desc":"408","fix":"450"},{"desc":"408","fix":"451"},{"desc":"408","fix":"452"},[1889,1889]," rel=\"noreferrer\"","Update the dependencies array to be: [dispatch]",{"range":"453","text":"454"},{"range":"455","text":"454"},{"range":"456","text":"454"},{"range":"457","text":"454"},{"range":"458","text":"454"},{"range":"459","text":"454"},{"range":"460","text":"454"},{"range":"461","text":"454"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"462","text":"463"},"Update the dependencies array to be: [props]",{"range":"464","text":"465"},{"range":"466","text":"465"},{"range":"467","text":"465"},{"range":"468","text":"465"},{"range":"469","text":"465"},{"range":"470","text":"465"},{"range":"471","text":"465"},{"range":"472","text":"465"},{"range":"473","text":"454"},{"range":"474","text":"454"},{"range":"475","text":"454"},{"range":"476","text":"454"},{"range":"477","text":"454"},{"range":"478","text":"454"},{"range":"479","text":"454"},{"range":"480","text":"454"},{"range":"481","text":"463"},{"range":"482","text":"465"},{"range":"483","text":"465"},{"range":"484","text":"465"},{"range":"485","text":"465"},{"range":"486","text":"465"},{"range":"487","text":"465"},{"range":"488","text":"465"},{"range":"489","text":"465"},{"range":"490","text":"454"},"Update the dependencies array to be: [dispatch, isLoggedIn]",{"range":"491","text":"492"},{"range":"493","text":"454"},{"range":"494","text":"454"},{"range":"495","text":"454"},{"range":"496","text":"454"},{"range":"497","text":"454"},{"range":"498","text":"454"},{"range":"499","text":"454"},{"range":"500","text":"463"},{"range":"501","text":"465"},{"range":"502","text":"465"},{"range":"503","text":"465"},{"range":"504","text":"465"},{"range":"505","text":"465"},{"range":"506","text":"465"},{"range":"507","text":"465"},{"range":"508","text":"465"},[1049,1051],"[dispatch]",[1220,1222],[1391,1393],[1596,1598],[1809,1811],[2010,2012],[2157,2159],[2336,2338],[1377,1379],"[dispatch, props.id]",[1485,1510],"[props]",[1723,1760],[1850,1880],[1974,2004],[2104,2134],[765,798],[1071,1104],[1261,1294],[1049,1051],[1220,1222],[1391,1393],[1596,1598],[1809,1811],[2010,2012],[2157,2159],[2336,2338],[1473,1475],[1581,1606],[1819,1856],[1946,1976],[2070,2100],[2200,2230],[866,899],[1172,1205],[1362,1395],[1183,1185],[1252,1254],"[dispatch, isLoggedIn]",[1423,1425],[1594,1596],[1799,1801],[2012,2014],[2213,2215],[2360,2362],[2539,2541],[1473,1475],[1581,1606],[1819,1856],[1946,1976],[2070,2100],[2200,2230],[866,899],[1172,1205],[1362,1395]]